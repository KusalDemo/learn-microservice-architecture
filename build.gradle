// Top-level plugins block. These plugins are available for subprojects to use
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.10' apply false  // Apply in subprojects manually
    id 'io.spring.dependency-management' version '1.1.7' apply false  // Same as above
}

// Common configuration for all projects
allprojects {
    group = 'com.simplehrms'
    version = '0.0.1-SNAPSHOT'

    // Maven Central as the default repository
    repositories {
        mavenCentral()
    }
}

// Shared configuration for all subprojects (each module)
subprojects {
    // Apply common plugins
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // Set Java version
    java {
        sourceCompatibility = JavaVersion.VERSION_17
    }

    // Repository for dependencies
    repositories {
        mavenCentral()
    }

    // Manage dependencies using Spring Cloud BOM
    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.5'
        }
    }

    // Common dependencies for all modules
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'  // Basic Spring Boot support
        implementation 'org.springframework.boot:spring-boot-starter-validation'  // Bean validation
        implementation 'org.springframework.boot:spring-boot-starter-actuator'  // Health checks, metrics, etc.
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'  // Swagger UI for OpenAPI docs

        // Lombok for boilerplate code reduction
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // Testing with JUnit
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    // Use JUnit 5 for testing
    tasks.named('test') {
        useJUnitPlatform()
    }
}

// ================== Individual Module Configurations ==================

// Eureka Discovery Server Module
project(':discovery-service') {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    }
}

// API Gateway Module
project(':api-gateway') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    }
}

// Common Module (shared between services)
project(':common') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }

    // Disable Spring Boot bootJar task, allow plain JAR so it can be used as a library
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}

// Students Microservice
project(':students-service') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        runtimeOnly 'org.postgresql:postgresql'  // PostgreSQL driver
        implementation 'org.flywaydb:flyway-core'  // Database migrations

        implementation project(':common')  // Reuse common module
    }
}

// Classes Microservice
project(':classes-service') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        runtimeOnly 'org.postgresql:postgresql'
        implementation 'org.flywaydb:flyway-core'

        implementation project(':common')  // Reuse common module
    }
}
